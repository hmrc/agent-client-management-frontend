# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"

play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"

# Custom error handler
play.http.errorHandler = "ErrorHandler"

appName = "agent-client-management-frontend"
play.http.router = prod.Routes

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9568 localhost:9032 www.google-analytics.com data:"

controllers {

  uk.gov.hmrc.agentclientmanagementfrontend.controllers.ClientRelationshipManagementController {
    needsAuditing = true
    needsLogging = true
  }
}
play.modules.enabled += "FrontendModule"
microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

assets {
  version = "2.253.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend-host = "http://localhost:9250/contact/problem_reports_"

reportAProblemPartialUrl = ${contact-frontend-host}"ajax?service="${appName}
reportAProblemNonJSUrl = ${contact-frontend-host}"nonjs?service="${appName}

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

Dev {
  microservice {
    services {
      auth {
        host = localhost
        port = 8500
      }

      agent-fi-relationship {
        host = localhost
        port = 9427
      }
      auth {
        host = localhost
        port = 8500
      }

      agent-fi-relationship {
        host = localhost
        port = 9427
      }

      des {
        host = localhost
        port = 9904
        environment = test
        authorization-token = secret
      }

      agent-services-account {
        host = localhost
        port = 9402
      }

      cachable.session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }


      des {
        host = localhost
        port = 9904
        environment = test
        authorization-token = secret
      }

      agent-services-account {
        host = localhost
        port = 9402
      }

      cachable.session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }

      agent-client-relationships {
        host = localhost
        port = 9434
      }
    }
  }
}

Test {
  microservice {
    services {
      auth {
        host = localhost
        port = 8500
      }

      agent-fi-relationship {
        host = localhost
        port = 9427
      }

      des {
        host = localhost
        port = 9904
        environment = test
        authorization-token = secret
      }

      agent-services-account {
        host = localhost
        port = 9402
      }

      cachable.session-cache {
        host = localhost
        port = 8400
        domain = keystore
      }

    }
  }
}

Prod {
  microservice {
    services {
      auth {
        host = auth.protected.mdtp
        port = 80
      }

      agent-fi-relationship {
        host = agent-fi-relationship.protected.mdtp
        port = 80
      }

      des {
        protocol = https
        host = des.ws.hmrc.gov.uk
        port = 443
        authorization-token = secret
        environment = noenv
      }

      agent-services-account {
        host = agent-services-account.protected.mdtp
        port = 80
      }

      cachable.session-cache {
        host = key-store.public.mdtp
        port = 80
        domain = keystore
      }
    }
  }
}

cache.expireAfterDays=1000